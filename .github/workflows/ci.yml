name: CI

on:
  push:
    branches:
      - master
      - staging
      - trying
    tags: '*'
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.julia-threads }} thread(s) - ${{ github.event_name }} 
    runs-on: ${{ matrix.os }}
    env:
      JULIA_NUM_THREADS: ${{ matrix.julia-threads }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.3' # Replace this with the minimum Julia version that your package supports.
          - '1'   # automatically expands to the latest stable 1.x release of Julia
          - 'nightly'
        os:
          - ubuntu-latest
          # - macOS-latest
          # - windows-latest
        arch:
          - x64
        julia-threads:
          - '1'

        include:
          - os: windows-latest
            version: '1'
            arch: x64
            julia-threads: '1'
          - os: macOS-latest
            version: '1'
            arch: x64
            julia-threads: '1'
          - os: ubuntu-latest
            version: '1'
            arch: x64
            julia-threads: '2'
  
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - run: julia .ci/develop.jl
      - run: julia .ci/test.jl
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info

  # docs:
  #   name: Documentation
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: julia-actions/setup-julia@v1
  #       with:
  #         version: '1'
  #     - run: julia --project=docs .ci/develop.jl
  #     - run: julia --project=docs docs/make.jl
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
  
  doctests:
    name: Doctests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: 'nightly'
      - run: julia --project=docs .ci/develop.jl
      - run: |
          julia --project=docs -e '
            using Documenter: doctest
            using NNlib
            using NNlibCUDA
            DocMeta.setdocmeta!(NNlib, :DocTestSetup, :(using NNlib); recursive=true)
            DocMeta.setdocmeta!(NNlibCUDA, :DocTestSetup, :(using NNlib, CUDA); recursive=true)
            doctest(NNlib)
            doctest(NNlibCUDA)'
