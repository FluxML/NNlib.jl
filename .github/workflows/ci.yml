name: CI

on:
  push:
    branches:
      - master
      - staging
      - trying
    tags: '*'
  pull_request:

# needed to allow julia-actions/cache to delete old caches that it has created
permissions:
  actions: write
  contents: read

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.julia-threads }} thread(s) 
    runs-on: ${{ matrix.os }}
    env:
      JULIA_NUM_THREADS: ${{ matrix.julia-threads }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'   # automatically expands to the latest stable 1.x release of Julia
          - 'nightly'
        os:
          - ubuntu-latest
          # - macOS-latest
          # - windows-latest
        arch:
          - x64
        julia-threads:
          - '1'

        include:
          - os: windows-latest
            version: '1'
            arch: x64
            julia-threads: '1'
          - os: macOS-latest
            version: '1'
            arch: x64
            julia-threads: '1'
          - os: ubuntu-latest
            version: '1'
            arch: x64
            julia-threads: '2'
  
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1

      - name: "Run test without coverage"
        uses: julia-actions/julia-runtest@v1
        if: ${{ !contains(fromJson('["1"]'), matrix.version) || matrix.os != 'ubuntu-latest' }}
        with:
          coverage: false

      - name: "Run test with coverage"
        uses: julia-actions/julia-runtest@v1
        if: contains(fromJson('["1"]'), matrix.version) && matrix.os == 'ubuntu-latest'
      - uses: julia-actions/julia-processcoverage@v1
        if: contains(fromJson('["1"]'), matrix.version) && matrix.os == 'ubuntu-latest'
      - uses: codecov/codecov-action@v3
        if: contains(fromJson('["1""]'), matrix.version) && matrix.os == 'ubuntu-latest'
        with:
          file: lcov.info

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - uses: julia-actions/cache@v1
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
